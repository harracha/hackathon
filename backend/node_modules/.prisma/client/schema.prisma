generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  username     String @unique
  info         Json?
  email        String   @unique
  password     String
  userRole     UserRole
  avatar       String?
  googleUserId String?
  devices       Device[]
  userStatus UserStatus @default(PENDING)
  keywords String[]
}

model Device {
  id         String       @id @default(uuid())
  name       String
  userId     String
  status     DeviceStatus
  user       User         @relation(fields: [userId], references: [id])
  quarantine Threat[]
  connection Connection[] @relation("ConnectionToDevice")
}

model Threat {
  id       String     @id @default(uuid())
  deviceId String
  type     ThreatType
  info     Json
  device   Device     @relation(fields: [deviceId], references: [id])
}

model Connection {
  id               String           @id @default(uuid())
  connectionStatus ConnectionStatus
  req              Req[]
  res              Res[]
  device           Device[]         @relation("ConnectionToDevice")
}

model Req {
  id               String     @id @default(uuid())
  connectionId     String
  senderDeviceId   String
  receiverDeviceId String
  reqExpress       Json
  connection       Connection @relation(fields: [connectionId], references: [id])
}

model Res {
  id               String     @id @default(uuid())
  connectionId     String
  senderDeviceId   String
  receiverDeviceId String
  resExpress       Json
  connection       Connection @relation(fields: [connectionId], references: [id])
}

enum UserRole {
  DEFAULT
  ADMIN
}

enum UserStatus {
  ACTIVE
  ARCHIVED
  PENDING
}

enum DeviceStatus {
  ONLINE
  OFFLINE
  ARCHIVED
}

enum ThreatType {
  HIGH
  MEDIUM
  LOW
}

enum ConnectionStatus {
  ACTIVE
  ARCHIVED
  FLAGGED
  PENDING
}
