generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  username     String
  info         Json?
  email        String
  password     String
  userRole     UserRole @default(DEFAULT)
  avatar       String?
  googleUserId String?
  devices       Device[]
  userStatus UserStatus @default(PENDING)
  keywords String[]
}

model Device {
  id         String       @id @default(uuid())
  name       String
  userId     String
  status     DeviceStatus
  user       User         @relation(fields: [userId], references: [id])
  quarantine Req[]
  connection Connection[] @relation("ConnectionToDevice")
}

model Connection {
  id               String           @id @default(uuid())
  connectionStatus ConnectionStatus
  req              Req[]
  res              Res[]
  device           Device[]         @relation("ConnectionToDevice")
}

model Req {
  id               String     @id @default(uuid())
  connectionId     String
  httpVersion String
  httpMethod HTTPMethods
  body String
  res Res?
  connection       Connection @relation(fields: [connectionId], references: [id])
  deviceId String?
  device Device?   @relation(fields: [deviceId], references: [id])
  isThreat Boolean
  threat String?
}

model Res {
  id               String     @id @default(uuid())
  connectionId     String
  code String
  req       Req @relation(fields: [reqId], references: [id])
  reqId String @unique
  connection       Connection @relation(fields: [connectionId], references: [id])
}

enum UserRole {
  DEFAULT
  ADMIN
}

enum UserStatus {
  ACTIVE
  ARCHIVED
  PENDING
}

enum DeviceStatus {
  ONLINE
  OFFLINE
  ARCHIVED
}

enum ThreatType {
  HIGH
  MEDIUM
  LOW
}

enum ConnectionStatus {
  ACTIVE
  ARCHIVED
  FLAGGED
  PENDING
}

enum HTTPMethods {
  GET
  POST
  PUT
  PATCH
  DELETE
}
