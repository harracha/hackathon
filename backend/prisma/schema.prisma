generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  info         Json?
  email        String
  password     String
  userRole     UserRole
  avatar       String?
  googleUserId String?
  userStatus   UserStatus @default(PENDING)
  keywords     String[]
  username     String
  devices      Device[]
}

model Device {
  id         String       @id @default(uuid())
  name       String
  userId     String
  status     DeviceStatus
  user       User         @relation(fields: [userId], references: [id])
  quarantine Req[]
  connection Connection[] @relation("ConnectionToDevice")
}

model Connection {
  id               String           @id @default(uuid())
  connectionStatus ConnectionStatus @default(PENDING)
  req              Req[]
  res              Res[]
  device           Device[]         @relation("ConnectionToDevice")
}

model Req {
  id           String      @id @default(uuid())
  connectionId String
  body         String
  httpMethod   HTTPMethods
  httpVersion  String
  isThreat     Boolean
  threat       String?
  deviceId     String?
  connection   Connection  @relation(fields: [connectionId], references: [id])
  device       Device?     @relation(fields: [deviceId], references: [id])
  res          Res?
}

model Res {
  id           String     @id @default(uuid())
  connectionId String
  code         String
  reqId        String     @unique
  connection   Connection @relation(fields: [connectionId], references: [id])
  req          Req        @relation(fields: [reqId], references: [id])
}

enum UserRole {
  DEFAULT
  ADMIN
}

enum UserStatus {
  ACTIVE
  ARCHIVED
  PENDING
}

enum DeviceStatus {
  ONLINE
  OFFLINE
  ARCHIVED
}

enum ThreatType {
  HIGH
  MEDIUM
  LOW
}

enum ConnectionStatus {
  ACTIVE
  ARCHIVED
  FLAGGED
  PENDING
}

enum HTTPMethods {
  GET
  POST
  PUT
  PATCH
  DELETE
}
